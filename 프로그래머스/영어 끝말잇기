/*순서를 저장할 변수를 만든다.
* 탈락한 사람의 번호는 words에서 탈락한 단어의 길이를 n으로 나눈 나머지로 구한다.
* 반복문을 돌면서 단어들을 answer 배열에 넣는다.
*  - 만약 answer 배열의 마지막 단어의 끝글자와, 현재 단어의 시작 글자가 같지 않는 경우 반복문을 종료한다.
*  - 만약 현재 단어가 answer 배열에 이미 있는 경우 반복문을 종료한다.
* 반복문을 다 돌았다면 탈락한 사람이 없는 것이므로 [0, 0]을 리턴한다.
*/

function solution(n, words) {    
    let times = 1;
    const answer = [];
    answer.push(words[0]);

    for(let i = 1; i < words.length; i++) {
        const personNum = (i+1) % n; 
        const order = personNum ? personNum : n;
        if(answer[answer.length - 1].slice(-1) !== words[i].slice(0, 1)) return [order, times];
        if(answer.includes(words[i])) return [order, times];

        answer.push(words[i]);
        !personNum && times++;
    }

    return [0, 0];
}
