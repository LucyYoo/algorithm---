function solution(numbers, hand) {
    let answer = '';  //결과 값을 담을 변수
    let num = {   //키패드 좌표 값 설정
        1: [0, 0], 2: [1, 0], 3: [2, 0],
        4: [0, 1], 5: [1, 1], 6: [2, 1],
        7: [0, 2], 8: [1, 2], 9: [2, 2],
        '*':[0, 3], 0: [1, 3], '#':[2, 3]
    }
    
    function cal(v, left, right, num, hand){     //좌표값 계산 함수
    const lef = Math.abs(num[left][0] - num[v][0]) +   //왼손 거리 계산
                Math.abs(num[left][1] - num[v][1]);
        
    const rig = Math.abs(num[right][0] - num[v][0]) +    //오른손 거리 계산
                Math.abs(num[right][1] - num[v][1]);
        
    if(lef === rig) return hand === 'left' ? "L" : "R";  //왼손 거리와 오른손 거리가 같다면 hand에 따라
    return lef < rig ? "L" : "R"; //왼손 거리가 짧다면 L을 아니면 R을 리턴
            
    }
    
    let left = '*';  //왼손 기본 값
    let right = '#';  //오른손 기본 값
    numbers.map((v) => {  
        if(v % 3 === 1) {  //만약 키패드가 1, 4, 7이라면
            answer += "L";  //L을 결과 값에 더하고
            left = v;      //기본 값 변경
        } else if(v % 3 === 0 && v !== 0) {  //만약 키패드가 3, 6, 9이고 0이 아니라면
            answer += "R";		//R을 결과 값에 더하고
            right = v; 		//기본 값 변경
        } else {
            answer += cal(v, left, right, num, hand);  //키패드가 2, 5, 8, 0인 경우 함수 리턴 값을 더하고
            answer[answer.length-1] === "L" ? left = v : right = v; //마지막 값에 따라 기본 값 설정
            
        }
        
    })
        
    
    return answer;
}
